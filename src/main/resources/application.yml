info:
  app:
    name: ${spring.application.name}
    version: 1.2.0
    description: Bremersee's Spring Eureka Server.

bremersee:
  access:
    application-access: ${APPLICATION_ACCESS:hasIpAddress('127.0.0.1/32') or hasIpAddress('::1')}
    actuator-access: ${ACTUATOR_ACCESS:hasIpAddress('127.0.0.1/32') or hasIpAddress('::1')}
    client-user-name: ${CLIENT_USER_NAME:user}
    client-user-password: ${CLIENT_USER_PASSWORD:changeit}
    actuator-user-name: ${ACTUATOR_USER_NAME:}
    actuator-user-password: ${ACTUATOR_USER_PASSWORD:}
    admin-user-name: ${ADMIN_USER_NAME:}
    admin-user-password: ${ADMIN_USER_PASSWORD:}

eureka:
  instance:
    hostname: ${HOST_NAME:localhost}
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${bremersee.access.client-user-name}:${bremersee.access.client-user-password}@${eureka.instance.hostname}:${server.port}/eureka/

logging:
  level:
    ROOT: ${LOG_LEVEL_ROOT:INFO}
    org.springframework: ${LOG_LEVEL_SPRING:INFO}
    org.bremersee: ${LOG_LEVEL_BREMERSEE:DEBUG}

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-headers: "*"
        allowed-methods: "*"
        allowed-origins: "*"

server:
  port: ${SERVER_PORT:8761}
  servlet:
    context-path: ${CONTEXT_PATH:/}
  forward-headers-strategy: native
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol-header: x-forwarded-proto
    port-header: x-forwarded-port
    accesslog:
      enabled: false
